/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import classes.Carro;
import classes.Cliente;
import classes.Locacao;
import dados.DadosCarros;
import dados.DadosClientes;
import dados.DadosLocacoes;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Vivian
 */
public class FPrincipalT extends javax.swing.JFrame {

    /**
     * Creates new form FPrincipalT
     */
    public FPrincipalT() {
        initComponents();
        campoBuscaLocacaoF1.setVisible(false);
        campoBuscaLocacaoF2.setVisible(false);
        etiquetaAte.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        botaoSair = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCarros = new javax.swing.JTable();
        botaoAlteraCarro = new javax.swing.JButton();
        botaoCadastraCarro = new javax.swing.JButton();
        etiquetaBusca = new javax.swing.JLabel();
        etiquetaPlaca = new javax.swing.JLabel();
        campoBuscaCarro = new javax.swing.JTextField();
        botaoBuscaCarro = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaCliente = new javax.swing.JTable();
        etiquetaBuscaCliente = new javax.swing.JLabel();
        comboBuscaCliente = new javax.swing.JComboBox<>();
        campoBuscaCliente = new javax.swing.JTextField();
        botaoBuscaCliente = new javax.swing.JButton();
        botaoAlteraCliente = new javax.swing.JButton();
        botaoCadastraCliente = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaLocacao1 = new javax.swing.JTable();
        botaoExcluiLocacao = new javax.swing.JButton();
        botaoAlteraLocacao = new javax.swing.JButton();
        botaoCadastraLocacao = new javax.swing.JButton();
        etiquetaBuscaLocacao = new javax.swing.JLabel();
        botaoRadioBuscaPlaca = new javax.swing.JRadioButton();
        botaoRadioBuscaCpfCnpj = new javax.swing.JRadioButton();
        botaoRadioBuscaData = new javax.swing.JRadioButton();
        etiquetaExibe = new javax.swing.JLabel();
        botaoRadioExibeTodasLocacoes = new javax.swing.JRadioButton();
        botaoRadioLocacoesDevolvidas = new javax.swing.JRadioButton();
        botaoRadioLocacoesNaoDevolvidas = new javax.swing.JRadioButton();
        etiquetaTxtSoma = new javax.swing.JLabel();
        etiquetaExibeValor = new javax.swing.JLabel();
        botaoBuscaLocacao = new javax.swing.JButton();
        botaoDevolveCarro = new javax.swing.JButton();
        campoBuscaLocacaoF1 = new javax.swing.JFormattedTextField();
        campoBuscaLocacaoF2 = new javax.swing.JFormattedTextField();
        etiquetaAte = new javax.swing.JLabel();
        campoBuscaLocacao = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Locando Carros Rio");

        botaoSair.setText("Sair");
        botaoSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoSair)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoSair)
                .addContainerGap())
        );

        tabelaCarros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Placa", "Marca", "Modelo", "Ano", "Valor da diÃ¡ria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaCarros);
        if (tabelaCarros.getColumnModel().getColumnCount() > 0) {
            tabelaCarros.getColumnModel().getColumn(0).setResizable(false);
            tabelaCarros.getColumnModel().getColumn(1).setResizable(false);
            tabelaCarros.getColumnModel().getColumn(2).setResizable(false);
            tabelaCarros.getColumnModel().getColumn(3).setResizable(false);
            tabelaCarros.getColumnModel().getColumn(4).setResizable(false);
        }

        botaoAlteraCarro.setText("Alterar");
        botaoAlteraCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlteraCarroActionPerformed(evt);
            }
        });

        botaoCadastraCarro.setText("Novo");
        botaoCadastraCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastraCarroActionPerformed(evt);
            }
        });

        etiquetaBusca.setText("Busca:");

        etiquetaPlaca.setText("Placa");

        botaoBuscaCarro.setText("Buscar");
        botaoBuscaCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBuscaCarroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 909, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(etiquetaBusca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoCadastraCarro)
                .addGap(73, 73, 73)
                .addComponent(botaoAlteraCarro)
                .addGap(39, 39, 39))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaPlaca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoBuscaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botaoBuscaCarro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAlteraCarro)
                    .addComponent(botaoCadastraCarro)
                    .addComponent(etiquetaBusca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaPlaca)
                    .addComponent(campoBuscaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoBuscaCarro))
                .addContainerGap(132, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Carros", jPanel2);

        tabelaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "EndereÃ§o", "CPF / CNPJ", "CNH ResponsÃ¡vel", "Data de Nascimento / Desconto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaCliente);
        if (tabelaCliente.getColumnModel().getColumnCount() > 0) {
            tabelaCliente.getColumnModel().getColumn(0).setResizable(false);
            tabelaCliente.getColumnModel().getColumn(1).setResizable(false);
            tabelaCliente.getColumnModel().getColumn(2).setResizable(false);
            tabelaCliente.getColumnModel().getColumn(3).setResizable(false);
            tabelaCliente.getColumnModel().getColumn(4).setResizable(false);
        }

        etiquetaBuscaCliente.setText("Buscar por:");

        comboBuscaCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "CPF / CNPJ", " " }));
        comboBuscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBuscaClienteActionPerformed(evt);
            }
        });

        botaoBuscaCliente.setText("Buscar");
        botaoBuscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBuscaClienteActionPerformed(evt);
            }
        });

        botaoAlteraCliente.setText("Alterar");
        botaoAlteraCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlteraClienteActionPerformed(evt);
            }
        });

        botaoCadastraCliente.setText("Novo");
        botaoCadastraCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastraClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 897, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(comboBuscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(campoBuscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(etiquetaBuscaCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoCadastraCliente)
                .addGap(91, 91, 91)
                .addComponent(botaoAlteraCliente)
                .addGap(47, 47, 47))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(botaoBuscaCliente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaBuscaCliente)
                    .addComponent(botaoAlteraCliente)
                    .addComponent(botaoCadastraCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoBuscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBuscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(botaoBuscaCliente)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Clientes", jPanel3);

        tabelaLocacao1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Data da LocaÃ§Ã£o", "Data da Entrega", "Quantidade de dias Locado", "Valor da LocaÃ§Ã£o", "Carro", "Cliente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabelaLocacao1);
        if (tabelaLocacao1.getColumnModel().getColumnCount() > 0) {
            tabelaLocacao1.getColumnModel().getColumn(0).setResizable(false);
            tabelaLocacao1.getColumnModel().getColumn(1).setResizable(false);
            tabelaLocacao1.getColumnModel().getColumn(2).setResizable(false);
            tabelaLocacao1.getColumnModel().getColumn(3).setResizable(false);
            tabelaLocacao1.getColumnModel().getColumn(4).setResizable(false);
            tabelaLocacao1.getColumnModel().getColumn(5).setResizable(false);
            tabelaLocacao1.getColumnModel().getColumn(6).setResizable(false);
        }

        botaoExcluiLocacao.setText("Excluir");
        botaoExcluiLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluiLocacaoActionPerformed(evt);
            }
        });

        botaoAlteraLocacao.setText("Alterar");
        botaoAlteraLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlteraLocacaoActionPerformed(evt);
            }
        });

        botaoCadastraLocacao.setText("Nova");
        botaoCadastraLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastraLocacaoActionPerformed(evt);
            }
        });

        etiquetaBuscaLocacao.setText("Buscar por:");

        buttonGroup1.add(botaoRadioBuscaPlaca);
        botaoRadioBuscaPlaca.setSelected(true);
        botaoRadioBuscaPlaca.setText("Placa");
        botaoRadioBuscaPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRadioBuscaPlacaActionPerformed(evt);
            }
        });

        buttonGroup1.add(botaoRadioBuscaCpfCnpj);
        botaoRadioBuscaCpfCnpj.setText("CPF ou CNPJ");
        botaoRadioBuscaCpfCnpj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRadioBuscaCpfCnpjActionPerformed(evt);
            }
        });

        buttonGroup1.add(botaoRadioBuscaData);
        botaoRadioBuscaData.setText("Data");
        botaoRadioBuscaData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRadioBuscaDataActionPerformed(evt);
            }
        });

        etiquetaExibe.setText("Exibir:");

        buttonGroup2.add(botaoRadioExibeTodasLocacoes);
        botaoRadioExibeTodasLocacoes.setSelected(true);
        botaoRadioExibeTodasLocacoes.setText("Todas as locaÃ§Ãµes");
        botaoRadioExibeTodasLocacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRadioExibeTodasLocacoesActionPerformed(evt);
            }
        });

        buttonGroup2.add(botaoRadioLocacoesDevolvidas);
        botaoRadioLocacoesDevolvidas.setText("LocaÃ§Ãµes Devolvidas");

        buttonGroup2.add(botaoRadioLocacoesNaoDevolvidas);
        botaoRadioLocacoesNaoDevolvidas.setText("LocaÃ§Ãµes NÃ£o Devolvidas");

        etiquetaTxtSoma.setText("ValorTotal  das LocaÃ§Ãµes:");

        etiquetaExibeValor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        etiquetaExibeValor.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                etiquetaExibeValorInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        botaoBuscaLocacao.setText("Buscar");
        botaoBuscaLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBuscaLocacaoActionPerformed(evt);
            }
        });

        botaoDevolveCarro.setText("Devolver o carro");
        botaoDevolveCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDevolveCarroActionPerformed(evt);
            }
        });

        try {
            campoBuscaLocacaoF1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoBuscaLocacaoF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoBuscaLocacaoF1ActionPerformed(evt);
            }
        });

        try {
            campoBuscaLocacaoF2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        etiquetaAte.setText("atÃ©");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(campoBuscaLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(botaoBuscaLocacao)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoBuscaLocacaoF2, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                    .addComponent(campoBuscaLocacaoF1)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(etiquetaAte)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoDevolveCarro)
                        .addGap(77, 77, 77))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiquetaBuscaLocacao)
                            .addComponent(botaoRadioBuscaPlaca)
                            .addComponent(botaoRadioBuscaCpfCnpj)
                            .addComponent(botaoRadioBuscaData))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(etiquetaExibe)
                                        .addGap(416, 416, 416)
                                        .addComponent(etiquetaTxtSoma))
                                    .addComponent(botaoRadioExibeTodasLocacoes))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(etiquetaExibeValor, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botaoRadioLocacoesDevolvidas)
                                    .addComponent(botaoRadioLocacoesNaoDevolvidas))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botaoCadastraLocacao)
                                .addGap(27, 27, 27)
                                .addComponent(botaoAlteraLocacao)
                                .addGap(27, 27, 27)
                                .addComponent(botaoExcluiLocacao)
                                .addContainerGap())))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(etiquetaTxtSoma))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(etiquetaExibeValor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botaoExcluiLocacao)
                            .addComponent(botaoAlteraLocacao)
                            .addComponent(botaoCadastraLocacao)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etiquetaBuscaLocacao)
                            .addComponent(etiquetaExibe))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botaoRadioBuscaPlaca)
                            .addComponent(botaoRadioExibeTodasLocacoes))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botaoRadioBuscaCpfCnpj)
                            .addComponent(botaoRadioLocacoesDevolvidas))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botaoRadioBuscaData)
                            .addComponent(botaoRadioLocacoesNaoDevolvidas))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoBuscaLocacaoF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoBuscaLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoDevolveCarro)
                    .addComponent(etiquetaAte)
                    .addComponent(botaoBuscaLocacao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoBuscaLocacaoF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("LocaÃ§Ãµes", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botaoSairActionPerformed

    private void botaoCadastraCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastraCarroActionPerformed
        FCadastroCarros cadastro = new FCadastroCarros(this, true);
        Carro c = cadastro.execute();
        if (c != null) {
            DadosCarros.lstCarros.add(c);
            this.carregarTabelaCarros(DadosCarros.lstCarros);
        }


    }//GEN-LAST:event_botaoCadastraCarroActionPerformed

    private void botaoAlteraCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlteraCarroActionPerformed
        try {
            if (DadosCarros.lstCarros.size() > -1) {
                String placa = tabelaCarros.getValueAt(tabelaCarros.getSelectedRow(), 0).toString();
                Carro c = DadosCarros.obterCarroPelaPlaca(placa, DadosCarros.lstCarros);
                if (c != null) {
                    if (JOptionPane.showConfirmDialog(this, "Deseja alterar o veÃ­culo placa " + c.getPlaca()
                            + "?", "Cadastro", JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                        FCadastroCarros cadastro = new FCadastroCarros(this, true);
                        Carro carro = cadastro.execute(c);
                        this.carregarTabelaCarros(DadosCarros.lstCarros);
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "NÃ£o foi possÃ­vel alterar o veÃ­culo. \n \n"
                    + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_botaoAlteraCarroActionPerformed

    private void botaoCadastraClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastraClienteActionPerformed
        FCadastroClientes cadastro = new FCadastroClientes(this, true);
        Cliente c = cadastro.execute();
        if (c != null) {
            DadosClientes.lstClientes.add(c);
            this.carregarTabelaClientes(DadosClientes.lstClientes);
        }
    }//GEN-LAST:event_botaoCadastraClienteActionPerformed

    private void botaoAlteraClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlteraClienteActionPerformed
        try {
            if (DadosClientes.lstClientes.size() > 0) {
                String nome = tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 0).toString();
                Cliente c = DadosClientes.obterClientePeloNomeExato(nome, DadosClientes.lstClientes);
                if (c != null) {

                    if (JOptionPane.showConfirmDialog(this,
                            "Deseja alterar " + c.getNome() + "?",
                            "Cadastro",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {

                        FCadastroClientes cadastro = new FCadastroClientes(this, true);
                        Cliente cliente = cadastro.execute(c);

                        this.carregarTabelaClientes(DadosClientes.lstClientes);
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "NÃ£o foi possÃ­vel alterar o cliente.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botaoAlteraClienteActionPerformed
/**/
    private void botaoBuscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoBuscaClienteActionPerformed
        if (comboBuscaCliente.getSelectedIndex() == 0) {
            if (campoBuscaCliente.getText().trim().equals("")) {
                this.carregarTabelaClientes(DadosClientes.lstClientes);
            } else {
                List<Cliente> clientesTemp
                        = DadosClientes.obterClientePeloNomeParcial(
                                campoBuscaCliente.getText().trim(),
                                DadosClientes.lstClientes,
                                false);
                this.carregarTabelaClientes(clientesTemp);
            }
        } else if (comboBuscaCliente.getSelectedIndex() == 1) {
            if (campoBuscaCliente.getText().equals("")) {
                this.carregarTabelaClientes(DadosClientes.lstClientes);
            } else {
                List<Cliente> clientesTemp
                        = DadosClientes.obterClientePeloCpfOuCnpj(
                                campoBuscaCliente.getText(),
                                DadosClientes.lstClientes);
                this.carregarTabelaClientes(clientesTemp);
            }
        }
        campoBuscaCliente.setText("");


    }//GEN-LAST:event_botaoBuscaClienteActionPerformed

    private void botaoCadastraLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastraLocacaoActionPerformed
        FCadastroLocacao cadastro = new FCadastroLocacao(this, true);
        Locacao loc = cadastro.execute();
        if (loc.getDevolucao() && loc.getCarro().isLocado() == false) {
            loc.getCarro().setLocado(true);
            loc.setDevolucao(false);
            Date hora = new Date();
            loc.setHoraCadastro(hora);
            DadosLocacoes.lstLocacao.add(loc);

            this.carregarTabelaLocacoes1(DadosLocacoes.lstLocacao);
        } else {
            JOptionPane.showMessageDialog(this, "VeÃ­culo nÃ£o disponÃ­vel para LocaÃ§Ã£o.");

        }
    }//GEN-LAST:event_botaoCadastraLocacaoActionPerformed

    private void botaoAlteraLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlteraLocacaoActionPerformed
        try {
            if (DadosLocacoes.lstLocacao.size() > 0) {
                Integer codigo = Integer.parseInt(tabelaLocacao1.getValueAt(tabelaLocacao1.getSelectedRow(), 0).toString());
                Locacao loc = DadosLocacoes.obterLocacaoPeloCodigo(codigo, DadosLocacoes.lstLocacao);
                if (loc != null) {
                    if (JOptionPane.showConfirmDialog(this, "Deseja alterar a locaÃ§Ã£o cÃ³digo: " + loc.getCodigo()
                            + "?", "Cadastro", JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                        FCadastroLocacao cadastro = new FCadastroLocacao(this, true);
                        Locacao locacao = cadastro.execute(loc);
                        this.carregarTabelaLocacoes1(DadosLocacoes.lstLocacao);
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "NÃ£o foi possÃ­vel alterar a locacao. \n \n"
                    + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botaoAlteraLocacaoActionPerformed

    private void botaoExcluiLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluiLocacaoActionPerformed
        Date horaExclusao = new Date();
        try {

            if (DadosLocacoes.lstLocacao.size() > 0) {
                Integer codigo = Integer.parseInt(tabelaLocacao1.getValueAt(tabelaLocacao1.getSelectedRow(), 0).toString());
                Locacao loc = DadosLocacoes.obterLocacaoPeloCodigo(codigo, DadosLocacoes.lstLocacao);
                if (loc != null && loc.getDevolucao() == false && horaExclusao.getTime() < (loc.getHoraCadastro().getTime() + 3600000)) {

                    if (JOptionPane.showConfirmDialog(this,
                            "Deseja apagar a locaÃ§Ã£o cÃ³digo: " + loc.getCodigo() + "?",
                            "Cadastro",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                        loc.setDevolucao(true);
                        loc.getCarro().setLocado(false);
                        DadosLocacoes.lstLocacao.remove(loc);
                        this.carregarTabelaLocacoes1(DadosLocacoes.lstLocacao);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "NÃ£o Ã© possÃ­vel excluir essa locaÃ§Ã£o.");
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "NÃ£o foi possÃ­vel excluir a locacao.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botaoExcluiLocacaoActionPerformed

    private void etiquetaExibeValorInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_etiquetaExibeValorInputMethodTextChanged
        if (DadosLocacoes.lstLocacao.size() > -1) {
            this.etiquetaTxtSoma.setText(DadosLocacoes.SomaLocacoes(DadosLocacoes.lstLocacao).toString());
        }
    }//GEN-LAST:event_etiquetaExibeValorInputMethodTextChanged

    private void botaoRadioExibeTodasLocacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRadioExibeTodasLocacoesActionPerformed

    }//GEN-LAST:event_botaoRadioExibeTodasLocacoesActionPerformed

    private void botaoBuscaLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoBuscaLocacaoActionPerformed
        try {
            if (botaoRadioBuscaPlaca.isSelected()) {
                String informacao = campoBuscaLocacao.getText().trim();
                    if (informacao.equals("")) {
                this.carregarTabelaLocacoes1(DadosLocacoes.lstLocacao);
            } 
                else if (botaoRadioExibeTodasLocacoes.isSelected()) {
                    List<Locacao> locacaoTemp = DadosLocacoes.obterLocacaoPelaPlaca(informacao, DadosLocacoes.lstLocacao);
                    this.carregarTabelaLocacoes1(locacaoTemp);
                } else if (botaoRadioLocacoesDevolvidas.isSelected()) {
                    List<Locacao> locacaoTemp = DadosLocacoes.obterLocacaoPelaPlaca(informacao, DadosLocacoes.lstLocacao);
                    List<Locacao> locTemp = new ArrayList<>();
                    for (Locacao loc : locacaoTemp) {
                        if (loc.getDevolucao()) {
                            locTemp.add(loc);
                        }
                    }
                    this.carregarTabelaLocacoes1(locTemp);
                } else if (botaoRadioLocacoesNaoDevolvidas.isSelected()) {
                    List<Locacao> locacaoTemp = DadosLocacoes.obterLocacaoPelaPlaca(informacao, DadosLocacoes.lstLocacao);
                    List<Locacao> locTemp = new ArrayList<>();
                    for (Locacao loc : locacaoTemp) {
                        if (loc.getDevolucao() == false) {
                            locTemp.add(loc);
                        }
                    }
                    this.carregarTabelaLocacoes1(locTemp);
                }
                campoBuscaLocacao.setText("");
            } else if (botaoRadioBuscaCpfCnpj.isSelected()) {
                String informacao = campoBuscaLocacao.getText().trim();
                if (informacao.equals("")) {
                this.carregarTabelaLocacoes1(DadosLocacoes.lstLocacao);
            } 
                else if (botaoRadioExibeTodasLocacoes.isSelected()) {
                    List<Locacao> locacaoTemp = DadosLocacoes.obterLocacaoPeloCpfOuCnpj(informacao, DadosLocacoes.lstLocacao);
                    this.carregarTabelaLocacoes1(locacaoTemp);
                } else if (botaoRadioLocacoesDevolvidas.isSelected()) {
                    List<Locacao> locacaoTemp = DadosLocacoes.obterLocacaoPeloCpfOuCnpj(informacao, DadosLocacoes.lstLocacao);
                    List<Locacao> locTemp = new ArrayList<>();
                    for (Locacao loc : locacaoTemp) {
                        if (loc.getDevolucao()) {
                            locTemp.add(loc);
                        }
                    }
                    this.carregarTabelaLocacoes1(locTemp);
                } else if (botaoRadioLocacoesNaoDevolvidas.isSelected()) {
                    List<Locacao> locacaoTemp = DadosLocacoes.obterLocacaoPeloCpfOuCnpj(informacao, DadosLocacoes.lstLocacao);
                    List<Locacao> locTemp = new ArrayList<>();
                    for (Locacao loc : locacaoTemp) {
                        if (loc.getDevolucao() == false) {
                            locTemp.add(loc);
                        }
                    }
                    this.carregarTabelaLocacoes1(locTemp);
                }
                campoBuscaLocacao.setText("");
            } else if (botaoRadioBuscaData.isSelected()) {
                SimpleDateFormat form = new SimpleDateFormat("dd/MM/yyyy");
                Date data1 = form.parse(campoBuscaLocacaoF1.getText());
                Date data2 = form.parse(campoBuscaLocacaoF2.getText());
                String informacao1 = campoBuscaLocacaoF1.getText().replaceAll("/", "").trim();
                String informacao2 = campoBuscaLocacaoF2.getText().replaceAll("/", "").trim();
                if (informacao1.equals("") || informacao2.equals("")) {
                this.carregarTabelaLocacoes1(DadosLocacoes.lstLocacao);
            } 
                
                else if (botaoRadioExibeTodasLocacoes.isSelected()) {
                    List<Locacao> locacaoTemp = DadosLocacoes.obterLocacaoPelaData(data1, data2, DadosLocacoes.lstLocacao);
                    this.carregarTabelaLocacoes1(locacaoTemp);
                } else if (botaoRadioLocacoesDevolvidas.isSelected()) {
                    List<Locacao> locacaoTemp = DadosLocacoes.obterLocacaoPelaData(data1, data2, DadosLocacoes.lstLocacao);
                    List<Locacao> locTemp = new ArrayList<>();
                    for (Locacao loc : locacaoTemp) {
                        if (loc.getDevolucao()) {
                            locTemp.add(loc);
                        }
                    }
                    this.carregarTabelaLocacoes1(locTemp);
                } else if (botaoRadioLocacoesNaoDevolvidas.isSelected()) {
                    List<Locacao> locacaoTemp = DadosLocacoes.obterLocacaoPelaData(data1, data2, DadosLocacoes.lstLocacao);
                    List<Locacao> locTemp = new ArrayList<>();
                    for (Locacao loc : locacaoTemp) {
                        if (loc.getDevolucao() == false) {
                            locTemp.add(loc);
                        }
                    }
                    this.carregarTabelaLocacoes1(locTemp);
                }
                campoBuscaLocacaoF1.setText("");
                campoBuscaLocacaoF2.setText("");
                MaskFormatter mask = new MaskFormatter("##/##/####");
                DefaultFormatterFactory dff = new DefaultFormatterFactory(mask);
                campoBuscaLocacaoF1.setFormatterFactory(dff);
                campoBuscaLocacaoF2.setFormatterFactory(dff);
            }
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "LocaÃ§Ã£o nÃ£o encontrada. \n \n"
                    + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botaoBuscaLocacaoActionPerformed

    private void comboBuscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBuscaClienteActionPerformed

    }//GEN-LAST:event_comboBuscaClienteActionPerformed

    private void botaoDevolveCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDevolveCarroActionPerformed
        SimpleDateFormat formata = new SimpleDateFormat("dd/MM/yyyy");
        try {
            if (DadosLocacoes.lstLocacao.size() > 0) {
                Integer codigo = Integer.parseInt(tabelaLocacao1.getValueAt(tabelaLocacao1.getSelectedRow(), 0).toString());
                Locacao loc = DadosLocacoes.obterLocacaoPeloCodigo(codigo, DadosLocacoes.lstLocacao);
                if (loc != null && loc.getDevolucao() == false) {
                    
                    if (JOptionPane.showConfirmDialog(this, "VeÃ­culo placa: " + loc.getCarro().getPlaca() + "\n"
                            + "locado em: " + formata.format(loc.getDataLocacao()) + "\n" + "Devolvido em : "
                            + formata.format(loc.getDataEntrega()) + "\n" + "Dias locado: " + loc.diasLocado()
                            + "\n" + "Valor total da locaÃ§Ã£o: R$" + loc.valorLocacao() + "0\n"
                            + "De acordo com as informaÃ§Ãµes?", "Cadastro", JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                        loc.setDevolucao(true);
                        loc.getCarro().setLocado(false);
                        this.carregarTabelaLocacoes1(DadosLocacoes.lstLocacao);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Esse veÃ­culo jÃ¡ foi devolvido.");
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "NÃ£o foi possÃ­vel devolver o veÃ­culo. \n \n"
                    + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

        /*FCadastroLocacao cadastro = new FCadastroLocacao(this, true);
        Locacao loc = cadastro.execute();
        if(loc != null){
            loc.setDevolucao(true);
            DadosLocacoes.lstLocacao.add(loc);
            this.grava = false;
            
            this.carregarTabelaLocacoes1(DadosLocacoes.lstLocacao);
        }*/
    }//GEN-LAST:event_botaoDevolveCarroActionPerformed

    private void botaoRadioBuscaDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRadioBuscaDataActionPerformed
        if (botaoRadioBuscaData.isSelected()) {
            campoBuscaLocacao.setVisible(false);
            etiquetaAte.setVisible(true);
            campoBuscaLocacaoF2.setVisible(true);
            campoBuscaLocacaoF1.setVisible(true);

        }
    }//GEN-LAST:event_botaoRadioBuscaDataActionPerformed

    private void botaoRadioBuscaPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRadioBuscaPlacaActionPerformed
        if (botaoRadioBuscaCpfCnpj.isSelected()) {
            campoBuscaLocacao.setVisible(true);
            etiquetaAte.setVisible(false);
            campoBuscaLocacaoF2.setVisible(false);
            campoBuscaLocacaoF1.setVisible(false);
        }
    }//GEN-LAST:event_botaoRadioBuscaPlacaActionPerformed

    private void botaoRadioBuscaCpfCnpjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRadioBuscaCpfCnpjActionPerformed
        if (botaoRadioBuscaCpfCnpj.isSelected()) {
            campoBuscaLocacao.setVisible(true);
            etiquetaAte.setVisible(false);
            campoBuscaLocacaoF2.setVisible(false);
            campoBuscaLocacaoF1.setVisible(false);
        }
    }//GEN-LAST:event_botaoRadioBuscaCpfCnpjActionPerformed

    private void campoBuscaLocacaoF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoBuscaLocacaoF1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoBuscaLocacaoF1ActionPerformed

    private void botaoBuscaCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoBuscaCarroActionPerformed
        if (campoBuscaCarro.getText().trim().equals("")) {
                this.carregarTabelaCarros(DadosCarros.lstCarros);
            } else {
                List<Carro> carroTemp = new ArrayList<>();
                String placa = campoBuscaCarro.getText().trim();
                Carro carro = DadosCarros.obterCarroPelaPlaca(placa, DadosCarros.lstCarros);
                  carroTemp.add(carro);
                this.carregarTabelaCarros(carroTemp);
                campoBuscaCarro.setText("");
            }
    }//GEN-LAST:event_botaoBuscaCarroActionPerformed
/**/
    private void carregarTabelaCarros(List<Carro> listaCarros) {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tabelaCarros.getModel();
            modelo.getDataVector().removeAllElements();
            for (Carro carros : listaCarros) {
                Locale localeBR = new Locale( "pt", "BR" );  
                NumberFormat dinheiroBR = NumberFormat.getCurrencyInstance(localeBR);  
                Vector v = new Vector();
                v.add(carros.getPlaca());
                v.add(carros.getMarca());
                v.add(carros.getModelo());
                v.add(carros.getAno());
                v.add(dinheiroBR.format(carros.getValorDiariaLocacao()));
                modelo.addRow(v);
            }
            tabelaCarros.repaint();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "NÃ£o foi possÃ­vel carregar o veÃ­culo. \n \n" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void carregarTabelaClientes(List<Cliente> lstCliente) {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tabelaCliente.getModel();
            modelo.getDataVector().removeAllElements();

            for (Cliente cliente : lstCliente) {

                SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");

                Vector v = new Vector();
                v.add(cliente.getNome());
                v.add(cliente.getEndereco());
                v.add(cliente.getCfpOuCnpj());
                v.add(cliente.getCnh2());
                v.add(cliente.getDtNascOuDesconto());
                modelo.addRow(v);
            }

            tabelaCliente.repaint();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "NÃ£o foi possÃ­vel carregar o cliente.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void carregarTabelaLocacoes1(List<Locacao> lstLocacao) {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tabelaLocacao1.getModel();
            modelo.getDataVector().removeAllElements();
            List<Locacao> listTempLocacao = new ArrayList<>();
            for (Locacao locacao : lstLocacao) {
                listTempLocacao.add(locacao);
                SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");

                Vector v = new Vector();
                v.add(locacao.getCodigo());
                v.add(f.format(locacao.getDataLocacao()));
                if (locacao.getDevolucao()) {
                    v.add(f.format(locacao.getDataEntrega()));
                } else {
                    v.add("");
                }
                v.add(locacao.diasLocado());
                Locale localeBR = new Locale( "pt", "BR" );  
                NumberFormat dinheiroBR = NumberFormat.getCurrencyInstance(localeBR);  
                if (locacao.getDevolucao()){
                     v.add(dinheiroBR.format(locacao.valorLocacao()));
                }
                else{
                    v.add("(" + dinheiroBR.format(locacao.valorLocacao()) + ")");
                }
                v.add(locacao.getCarro().informacoes());
                v.add(locacao.getCliente().informacao());
                modelo.addRow(v);
            }
            tabelaLocacao1.repaint();
            Locale localeBR = new Locale( "pt", "BR" );  
            NumberFormat dinheiroBR = NumberFormat.getCurrencyInstance(localeBR);  
            this.etiquetaExibeValor.setText(dinheiroBR.format(DadosLocacoes.SomaLocacoes(listTempLocacao)));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "NÃ£o foi possÃ­vel carregar a locaÃ§Ã£o.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FPrincipalT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FPrincipalT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FPrincipalT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPrincipalT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FPrincipalT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAlteraCarro;
    private javax.swing.JButton botaoAlteraCliente;
    private javax.swing.JButton botaoAlteraLocacao;
    private javax.swing.JButton botaoBuscaCarro;
    private javax.swing.JButton botaoBuscaCliente;
    private javax.swing.JButton botaoBuscaLocacao;
    private javax.swing.JButton botaoCadastraCarro;
    private javax.swing.JButton botaoCadastraCliente;
    private javax.swing.JButton botaoCadastraLocacao;
    private javax.swing.JButton botaoDevolveCarro;
    private javax.swing.JButton botaoExcluiLocacao;
    private javax.swing.JRadioButton botaoRadioBuscaCpfCnpj;
    private javax.swing.JRadioButton botaoRadioBuscaData;
    private javax.swing.JRadioButton botaoRadioBuscaPlaca;
    private javax.swing.JRadioButton botaoRadioExibeTodasLocacoes;
    private javax.swing.JRadioButton botaoRadioLocacoesDevolvidas;
    private javax.swing.JRadioButton botaoRadioLocacoesNaoDevolvidas;
    private javax.swing.JButton botaoSair;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField campoBuscaCarro;
    private javax.swing.JTextField campoBuscaCliente;
    private javax.swing.JTextField campoBuscaLocacao;
    private javax.swing.JFormattedTextField campoBuscaLocacaoF1;
    private javax.swing.JFormattedTextField campoBuscaLocacaoF2;
    private javax.swing.JComboBox<String> comboBuscaCliente;
    private javax.swing.JLabel etiquetaAte;
    private javax.swing.JLabel etiquetaBusca;
    private javax.swing.JLabel etiquetaBuscaCliente;
    private javax.swing.JLabel etiquetaBuscaLocacao;
    private javax.swing.JLabel etiquetaExibe;
    private javax.swing.JLabel etiquetaExibeValor;
    private javax.swing.JLabel etiquetaPlaca;
    private javax.swing.JLabel etiquetaTxtSoma;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tabelaCarros;
    private javax.swing.JTable tabelaCliente;
    private javax.swing.JTable tabelaLocacao1;
    // End of variables declaration//GEN-END:variables
}
